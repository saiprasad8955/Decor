{"version":3,"file":"static/js/900.c32b1a68.chunk.js","mappings":"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","sources":["components/delete-popup/delete-popup.js","components/drawer/drawer.js","sections/customer-master/customerForm.js","sections/customer-master/view.js","pages/dashboard/one.js"],"sourcesContent":["// components/popups/ReusableDeletePopover.js\n\nimport PropTypes from 'prop-types';\nimport { Button, Stack, Typography } from '@mui/material';\nimport CustomPopover from '../custom-popover';\n\nexport default function ReusableDeletePopover({\n  open,\n  onClose,\n  onConfirm,\n  title = 'Delete Item?',\n  description = 'This action cannot be undone.',\n}) {\n  return (\n    <CustomPopover open={open} onClose={onClose} arrow=\"top-right\">\n      <Stack spacing={2} sx={{ p: 2, minWidth: 240 }}>\n        <Typography variant=\"subtitle1\">{title}</Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {description}\n        </Typography>\n        <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\">\n          <Button size=\"small\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"error\" variant=\"contained\" onClick={onConfirm}>\n            Delete\n          </Button>\n        </Stack>\n      </Stack>\n    </CustomPopover>\n  );\n}\n\nReusableDeletePopover.propTypes = {\n  open: PropTypes.object, // anchorEl\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n","import { Drawer, Box, IconButton, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport PropTypes from 'prop-types';\n\n\nexport default function MasterDrawer({ open, onClose, title, children }) {\n  return (\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\n      <Box sx={{ width: { xs: 300, sm: 600 }, p: 3 }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"h6\">{title}</Typography>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <Box mt={3}>{children}</Box>\n      </Box>\n    </Drawer>\n  );\n};\n\nMasterDrawer.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};","import * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { TextField, Stack, Button, Box } from '@mui/material';\nimport PropTypes from 'prop-types'; // @mui\n\nconst CustomerSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  number: Yup.string()\n    .required('Number is required')\n    .matches(/^\\d{10}$/, 'Number must be digits and exactly 10 digits'),\n  email: Yup.string().email('Invalid email').nullable(),\n  address: Yup.string().nullable(),\n});\n\nexport default function CustomerForm({ initialData = {}, onSubmit, onClose }) {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(CustomerSchema),\n    defaultValues: {\n      name: initialData.name || '',\n      number: initialData.number || '',\n      email: initialData.email || '',\n      address: initialData.address || '',\n    },\n  });\n\n  const submitForm = (data) => {\n    onSubmit(data);\n    reset();\n    onClose();\n  };\n\n  // console.log({ defaultValues });\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit(submitForm)}>\n      <Stack spacing={2}>\n        <TextField\n          label=\"Name\"\n          {...register('name')}\n          error={!!errors.name}\n          helperText={errors.name?.message}\n          fullWidth\n        />\n        <TextField\n          label=\"Mobile Number\"\n          {...register('number')}\n          error={!!errors.number}\n          helperText={errors.number?.message}\n          fullWidth\n        />\n        <TextField\n          label=\"Email\"\n          {...register('email')}\n          error={!!errors.email}\n          helperText={errors.email?.message}\n          fullWidth\n        />\n        <TextField\n          label=\"Address\"\n          {...register('address')}\n          error={!!errors.address}\n          helperText={errors.address?.message}\n          fullWidth\n          multiline\n          rows={2}\n        />\n\n        <Box textAlign=\"right\">\n          <Button type=\"submit\" variant=\"contained\">\n            {initialData?.name ? 'Update' : 'Add'}\n          </Button>\n        </Box>\n      </Stack>\n    </Box>\n  );\n}\n\nCustomerForm.propTypes = {\n  initialData: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import { useState, useCallback } from 'react';\nimport useSWR, { mutate } from 'swr';\nimport {\n  Button,\n  Container,\n  Typography,\n  Stack,\n  Paper,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport axiosInstance, { endpoints } from 'src/utils/axios';\nimport ReusableDeletePopover from 'src/components/delete-popup/delete-popup';\nimport { useSettingsContext } from 'src/components/settings';\nimport MasterDrawer from 'src/components/drawer';\nimport CustomerForm from './customerForm';\n\nconst fetcher = (url) => axiosInstance.get(url).then((res) => res.data);\n\nexport default function OneView() {\n  const settings = useSettingsContext();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [editCustomer, setEditCustomer] = useState(null);\n  const [deletePopoverEl, setDeletePopoverEl] = useState(null);\n  const [selectedCustomerId, setSelectedCustomerId] = useState(null);\n\n  const handleOpenDeletePopover = (event, id) => {\n    console.log('🚀 ~ handleOpenDeletePopover ~ id:', id);\n    setDeletePopoverEl(event.currentTarget);\n    setSelectedCustomerId(id);\n  };\n\n  const handleCloseDeletePopover = () => {\n    setDeletePopoverEl(null);\n    setSelectedCustomerId(null);\n  };\n\n  const handleConfirmDelete = () => {\n    handleDelete(selectedCustomerId); // your existing delete logic\n    handleCloseDeletePopover();\n  };\n\n  const { data: customers, error, isLoading } = useSWR(endpoints.customer.list, fetcher);\n\n  const handleAdd = useCallback(() => {\n    setEditCustomer(null);\n    setOpenDrawer(true);\n  }, []);\n\n  console.log({ selectedCustomerId });\n\n  const handleSaveCustomer = useCallback(\n    async (data) => {\n      try {\n        let response;\n\n        if (editCustomer) {\n          // Update existing customer\n          response = await axiosInstance.put(`/customer/update/${editCustomer._id}`, data);\n          console.log(response.data);\n          const updatedCustomers = customers.map((customer) =>\n            customer._id === editCustomer._id ? response.data : customer\n          );\n          mutate(endpoints.customer.list, updatedCustomers, false);\n        } else {\n          // Add new customer\n          response = await axiosInstance.post('/customer/add', data);\n          const updatedCustomers = [...customers, response.data];\n          mutate(endpoints.customer.list, updatedCustomers, false);\n        }\n\n        setOpenDrawer(false);\n      } catch (err) {\n        console.error('Failed to save customer:', err);\n        // Optionally show a toast or message here\n      }\n    },\n    [customers, editCustomer]\n  );\n\n  const handleDelete = useCallback(\n    async (id) => {\n      try {\n        await axiosInstance.delete(`/customer/delete/${id}`);\n        const updatedCustomers = customers.filter((customer) => customer._id !== id);\n        console.log(\"🚀 ~ updatedCustomers:\", updatedCustomers);\n\n        mutate(endpoints.customer.list);\n      } catch (err) {\n        console.error('Failed to save customer:', err);\n        // Optionally show a toast or message here\n      }\n    },\n    [customers]\n  );\n\n  if (error) {\n    return (\n      <div style={{ width: '100%', justifyContent: 'center' }}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" mb={3}>\n          <Typography variant=\"h4\">Customers</Typography>\n          <Button variant=\"contained\" onClick={handleAdd}>\n            Add Customer\n          </Button>\n        </Stack>\n\n        <p style={{ color: 'red', fontSize: 20, textAlign: 'center', paddingTop: '150px' }}>\n          Failed to load customers!\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Stack direction=\"row\" justifyContent=\"space-between\" mb={3}>\n        <Typography variant=\"h4\">Customers</Typography>\n        <Button variant=\"contained\" onClick={handleAdd}>\n          Add Customer\n        </Button>\n      </Stack>\n\n      <Paper sx={{ width: '100%', overflow: 'auto' }}>\n        {isLoading ? (\n          <div style={{ display: 'flex', justifyContent: 'center', padding: '20px' }}>\n            <CircularProgress />\n          </div>\n        ) : (\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Number</TableCell>\n                <TableCell>Address</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {customers && customers.length > 0 ? (\n                customers.map((customer) => (\n                  <TableRow key={customer._id}>\n                    <TableCell>{customer.name}</TableCell>\n                    <TableCell>{customer.email || 'N/A'}</TableCell>\n                    <TableCell>+91 {customer.number}</TableCell>\n                    <TableCell>{customer.address || 'N/A'}</TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        color=\"primary\"\n                        onClick={() => {\n                          setEditCustomer(customer);\n                          setOpenDrawer(true);\n                        }}\n                      >\n                        <Edit />\n                      </IconButton>\n                      <IconButton\n                        color=\"error\"\n                        onClick={(e) => handleOpenDeletePopover(e, customer._id)}\n                      >\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={5} align=\"center\" sx={{ py: 4 }}>\n                    <Typography variant=\"body1\" color=\"text.secondary\">\n                      No customers found. Head towards <strong>Add Customer</strong> to add them.\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        )}\n      </Paper>\n\n      <MasterDrawer\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        title={editCustomer ? 'Update Customer' : 'Add Customer'}\n      >\n        <CustomerForm\n          initialData={editCustomer || {}}\n          onSubmit={handleSaveCustomer}\n          onClose={() => setOpenDrawer(false)}\n        />\n      </MasterDrawer>\n\n      <ReusableDeletePopover\n        open={deletePopoverEl}\n        onClose={handleCloseDeletePopover}\n        onConfirm={handleConfirmDelete}\n        title=\"Delete Customer?\"\n        description=\"Are you sure you want to delete this customer?\"\n      />\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport OneView from 'src/sections/customer-master/view';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomerPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Customer</title>\n      </Helmet>\n\n      <OneView />\n    </>\n  );\n}\n"],"names":["ReusableDeletePopover","_ref","open","onClose","onConfirm","_ref$title","title","_ref$description","description","_jsx","CustomPopover","arrow","children","_jsxs","Stack","spacing","sx","p","minWidth","Typography","variant","color","direction","justifyContent","Button","size","onClick","MasterDrawer","Drawer","anchor","Box","width","xs","sm","display","alignItems","IconButton","CloseIcon","mt","CustomerSchema","Yup","shape","name","required","number","matches","email","nullable","address","CustomerForm","_errors$name","_errors$number","_errors$email","_errors$address","_ref$initialData","initialData","onSubmit","_useForm","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","reset","errors","formState","component","data","TextField","_objectSpread","label","error","helperText","message","fullWidth","multiline","rows","textAlign","type","fetcher","url","axiosInstance","then","res","OneView","settings","useSettingsContext","_useState","useState","_useState2","_slicedToArray","openDrawer","setOpenDrawer","_useState3","_useState4","editCustomer","setEditCustomer","_useState5","_useState6","deletePopoverEl","setDeletePopoverEl","_useState7","_useState8","selectedCustomerId","setSelectedCustomerId","handleCloseDeletePopover","_useSWR","useSWR","endpoints","customers","isLoading","handleAdd","useCallback","console","log","handleSaveCustomer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","updatedCustomers","_updatedCustomers","wrap","_context","prev","next","concat","_id","sent","map","customer","mutate","_toConsumableArray","t0","stop","_x","apply","arguments","handleDelete","_ref2","_callee2","id","_context2","filter","_x2","style","mb","fontSize","paddingTop","Container","maxWidth","themeStretch","Paper","overflow","padding","CircularProgress","Table","TableHead","TableRow","TableCell","align","TableBody","length","Edit","e","event","currentTarget","Delete","colSpan","py","CustomerPage","_Fragment","Helmet"],"sourceRoot":""}