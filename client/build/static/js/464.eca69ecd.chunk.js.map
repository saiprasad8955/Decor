{"version":3,"file":"static/js/464.eca69ecd.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nfunction _superPropBase(t, o) {\n  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = getPrototypeOf(t)););\n  return t;\n}\nexport { _superPropBase as default };","import superPropBase from \"./superPropBase.js\";\nfunction _get() {\n  return _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) {\n    var p = superPropBase(e, t);\n    if (p) {\n      var n = Object.getOwnPropertyDescriptor(p, t);\n      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;\n    }\n  }, _get.apply(null, arguments);\n}\nexport { _get as default };","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n"],"names":["_superPropBase","t","o","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","e","r","p","n","Object","getOwnPropertyDescriptor","arguments","length","value","apply","Feature","node","_classCallCheck","this","isMounted","_createClass","key","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","undefined","point","x","y","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","addDomEvent","target","eventName","handler","options","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","distance","a","b","Math","abs","distance2D","xDelta","yDelta","sqrt","pow","PanSession","handlers","_this","_ref","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","timestamp","frameData","push","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","frame","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","type","initialInfo","onSessionStart","removeListeners","pipe","window","cancelFrame","subtractPoint","_ref2","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","name","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","mix","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeBox","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_ref3","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","callback","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_slicedToArray","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","prototype","results","supports","_loop","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","easingDefinitionToFunction","definition","invariant","_definition","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","state","done","absoluteTimes","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","interpolate","splice","calculatedDuration","next","calcGeneratorVelocity","resolveValue","current","prevT","velocityPerSecond","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","warning","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","resolveSpring","restDelta","restSpeed","_objectWithoutProperties","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","v","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","start","stop","now","performance","calcGeneratorDuration","generator","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","_toConsumableArray","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","newTime","newSpeed","pause","complete","sample","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","_defineProperty","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","maxDefaults","applyDefaultFilter","_v$slice$split","slice","split","_v$slice$split2","match","floatRegex","number","unit","replace","defaultValue","functionRegex","filter","getAnimatableNone","functions","join","defaultValueTypes","numberValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","test","isNone","getKeyframes","transition","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","getProps","acceleratedAnimation","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","presenceContext","isPresent","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","animationState","setActive","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","render","panSession","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","all","_this4","dragKey","toUpperCase","props","externalMotionValue","getValue","initial","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","_Feature","_inherits","_super","_createSuper","removeGroupControls","dragControls","subscribe","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","_this$node$getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","_this$props","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","register","didUpdate","safeToRemove","setOptions","onExitComplete","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","MeasureLayout","_usePresence","context","useContext","PresenceContext","id","useId","useEffect","usePresence","_usePresence2","LayoutGroupContext","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","opacity","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","forEach","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","children","isDirty","child","sort","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","tagName","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","notify","_this$options","mount","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","shouldReduceMotion","delete","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","_a","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","isMotionValue","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","styleProp","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","transformOrigin","scaleCorrectors","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","output","mixAxis","to","roundAxis","round","DocumentProjectionNode","ref","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","shallowCompare","prev","prevLength","resolveVariant","custom","resolveVariantFromProps","getCurrent","optimizedAppearDataAttribute","camelToDash","isWillChangeMotionValue","testValueType","dimensionValueTypes","degrees","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","addValue","setTarget","resolved","makeTargetAnimatable","_ref$transitionEnd","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","valueTarget","HandoffAppearAnimations","hasAnimated","appearId","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","unmount","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","addHoverEvent","callbackName","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","hover","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","trim","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","removedTransforms","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","indexOf","pageYOffset","convertedTarget","_ref12","_ref13","isBrowser","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","assign","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","featureDefinitions","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","isEnabled","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","variants","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","HTMLVisualElement","_DOMVisualElement","defaultType","default","computedStyle","isCSSVariableName","buildHTMLStyles","childSubscription","textContent","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","_getPrototypeOf","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","domMax"],"sourceRoot":""}