{"version":3,"file":"static/js/348.cc763706.chunk.js","mappings":"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","sources":["components/delete-popup/delete-popup.js","components/drawer/drawer.js","sections/invoice-management/InvoiceForm.js","sections/invoice-management/view.js","pages/dashboard/three.js"],"sourcesContent":["// components/popups/ReusableDeletePopover.js\n\nimport PropTypes from 'prop-types';\nimport { Button, Stack, Typography } from '@mui/material';\nimport CustomPopover from '../custom-popover';\n\nexport default function ReusableDeletePopover({\n  open,\n  onClose,\n  onConfirm,\n  title = 'Delete Item?',\n  description = 'This action cannot be undone.',\n}) {\n  return (\n    <CustomPopover open={open} onClose={onClose} arrow=\"top-right\">\n      <Stack spacing={2} sx={{ p: 2, minWidth: 240 }}>\n        <Typography variant=\"subtitle1\">{title}</Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {description}\n        </Typography>\n        <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\">\n          <Button size=\"small\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"error\" variant=\"contained\" onClick={onConfirm}>\n            Delete\n          </Button>\n        </Stack>\n      </Stack>\n    </CustomPopover>\n  );\n}\n\nReusableDeletePopover.propTypes = {\n  open: PropTypes.object, // anchorEl\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n","import { Drawer, Box, IconButton, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport PropTypes from 'prop-types';\n\nexport default function MasterDrawer({ open, onClose, title, children }) {\n  console.log('🚀 ~ MasterDrawer ~ title:', title);\n  return (\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\n      <Box sx={{ width: { xs: 300, sm: title.includes('Invoice') ? 1000 : 600 }, p: 3 }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"h6\">{title}</Typography>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <Box mt={3}>{children}</Box>\n      </Box>\n    </Drawer>\n  );\n}\n\nMasterDrawer.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  MenuItem,\n  IconButton,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Select,\n  InputLabel,\n  FormControl,\n  Grid,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useForm, useFieldArray, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport axiosInstance, { endpoints } from 'src/utils/axios';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\ndayjs.extend(utc);\n\n// Validation Schema\nconst InvoiceSchema = Yup.object().shape({\n  customerId: Yup.string().required('Customer is required'),\n  sales_person: Yup.string().required('Sales person is required'),\n  invoice_date: Yup.date().required('Invoice date is required'),\n  delivery_date: Yup.date().required('Delivery date is required'),\n  description: Yup.string().nullable(),\n  items: Yup.array()\n    .of(\n      Yup.object().shape({\n        item: Yup.string().required('Item is required'),\n        quantity: Yup.number()\n          .required('Quantity is required')\n          .min(1, 'Quantity must be at least 1')\n          .max(10000, 'Quantity too high'),\n        rate: Yup.number()\n          .required('Rate is required')\n          .min(0, 'Rate cannot be negative')\n          .max(1000000, 'Rate too high'),\n        tax: Yup.number()\n          .required('Tax is required')\n          .min(0, 'Tax cannot be negative')\n          .max(100, 'Tax must be less than or equal to 100'),\n        total: Yup.number().required(),\n      })\n    )\n    .min(1, 'At least one item is required'),\n  discount: Yup.number().min(0, 'Discount cannot be negative').default(0),\n});\n\nexport default function InvoiceForm({ onSubmit, onClose, initialData, customers, itemsList }) {\n  console.log('🚀 ~ InvoiceForm ~ itemsList:', itemsList);\n  console.log('🚀 ~ InvoiceForm ~ customers:', customers);\n  const {\n    control,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(InvoiceSchema),\n    defaultValues: {\n      customerId: initialData?.customerId ? initialData.customerId : '',\n      sales_person: initialData?.sales_person || '',\n      invoice_date: initialData?.invoice_date || dayjs().startOf('day').utc().toISOString(),\n      delivery_date:\n        initialData?.delivery_date || dayjs().add(1, 'day').startOf('day').utc().toISOString(),\n      description: initialData?.description || '',\n      items: initialData.items\n        ? initialData.items\n        : [{ item: '', quantity: 1, rate: 0, tax: 0, total: 0 }],\n      discount: initialData ? initialData.discount : 0,\n    },\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'items',\n  });\n\n  const watchedItems = watch('items');\n  const discount = watch('discount');\n  console.log(watch());\n  // Recalculate totals when fields change\n  useEffect(() => {\n    watchedItems.forEach((item, index) => {\n      const quantity = Number(item.quantity) || 0;\n      const rate = Number(item.rate) || 0;\n      const tax = Number(item.tax) || 0;\n\n      const base = quantity * rate;\n      const taxAmount = (tax / 100) * base;\n      const total = base + taxAmount;\n\n      setValue(`items.${index}.total`, total);\n    });\n  }, [watchedItems, discount, setValue]);\n\n  // Totals\n  const subtotal = watchedItems.reduce((sum, curr) => sum + (curr.total || 0), 0);\n  const finalAmount = subtotal - discount;\n\n  // Submit\n  const submitForm = (data) => {\n    const formData = {\n      ...data,\n      subtotal,\n      final_amount: finalAmount,\n    };\n    onSubmit(formData);\n    onClose();\n  };\n\n  useEffect(() => {\n    const subscription = watch((value, { name }) => {\n      if (name?.includes('items') && name.endsWith('.item')) {\n        const index = parseInt(name.split('.')[1], 10);\n        const selectedItem = itemsList.find((itm) => itm._id === value.items[index].item);\n\n        if (selectedItem) {\n          const quantity = value.items[index].quantity || 1;\n          const rate = selectedItem.selling_price || 0;\n          const tax = selectedItem.tax || 0;\n          const base = quantity * rate;\n          const taxAmount = (tax / 100) * base;\n          const total = base + taxAmount;\n\n          setValue(`items.${index}.rate`, rate);\n          setValue(`items.${index}.tax`, tax);\n          setValue(`items.${index}.total`, total);\n        }\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [watch, itemsList, setValue]);\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate>\n      <Grid container spacing={2}>\n        {/* Customer */}\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth>\n            <InputLabel id=\"customer-select-label\">Select an Item</InputLabel>\n            <Select\n              labelId=\"customer-select-label\"\n              id=\"customer-select\"\n              label=\"Select Customer\"\n              error={!!errors.customerId}\n              value={watch('customerId')}\n              helperText={errors.customerId?.message}\n              {...register('customerId')}\n            >\n              {customers.map((cust) => (\n                <MenuItem key={cust._id} value={cust._id}>\n                  {cust.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Sales Person */}\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Sales Person\"\n            value={watch('sales_person')}\n            {...register('sales_person')}\n            error={!!errors.sales_person}\n            helperText={errors.sales_person?.message}\n          />\n        </Grid>\n\n        {/* Dates */}\n        <Grid item xs={12} md={6}>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <Controller\n              name=\"invoice_date\"\n              control={control}\n              render={({ field }) => (\n                <DatePicker\n                  label=\"Invoice Date\"\n                  value={field.value ? dayjs(field.value) : null}\n                  onChange={(date) => {\n                    if (date) {\n                      const utcDate = date.startOf('day').utc().toISOString();\n                      field.onChange(utcDate);\n                    } else {\n                      field.onChange('');\n                    }\n                  }}\n                  slotProps={{ textField: { fullWidth: true } }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      error={!!errors.invoice_date}\n                      helperText={errors.invoice_date?.message}\n                    />\n                  )}\n                />\n              )}\n            />\n          </LocalizationProvider>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <Controller\n              name=\"delivery_date\"\n              control={control}\n              render={({ field }) => (\n                <DatePicker\n                  label=\"Delivery Date\"\n                  value={field.value ? dayjs(field.value) : null}\n                  onChange={(date) => field.onChange(date ? date.toISOString() : '')}\n                  slotProps={{ textField: { fullWidth: true } }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      error={!!errors.delivery_date}\n                      helperText={errors.delivery_date?.message}\n                    />\n                  )}\n                />\n              )}\n            />\n          </LocalizationProvider>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <TextField\n            label=\"Description\"\n            {...register('description')}\n            value={watch('description')}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Typography variant=\"h6\">Items</Typography>\n          <Paper sx={{ width: '100%', overflow: 'auto', p: 0.5 }}>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Item</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Tax %</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell align=\"right\">\n                    <IconButton\n                      onClick={() => append({ item: '', quantity: 1, rate: 0, tax: 0, total: 0 })}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {fields.map((field, index) => (\n                  <TableRow key={field.id}>\n                    <TableCell>\n                      <Controller\n                        control={control}\n                        name={`items.${index}.item`}\n                        render={({ field: controllerField }) => (\n                          <FormControl style={{ width: '200px' }}>\n                            <InputLabel id=\"item-simple-select-label\">Select an Item</InputLabel>\n                            <Select\n                              labelId=\"item-simple-select-label\"\n                              id=\"item-simple-select\"\n                              label=\"Select an Item\"\n                              style={{ width: '200px' }}\n                              {...controllerField}\n                              value={controllerField.value || ''} // <-- this line is needed!\n                              error={!!errors.items?.[index]?.item}\n                            >\n                              {itemsList.map((itm) => (\n                                <MenuItem key={itm._id} value={itm._id}>\n                                  {itm.item_name}\n                                </MenuItem>\n                              ))}\n                            </Select>\n                          </FormControl>\n                        )}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Controller\n                        control={control}\n                        name={`items.${index}.quantity`}\n                        render={({ field: quantityField }) => (\n                          <TextField\n                            type=\"number\"\n                            {...quantityField}\n                            onChange={(e) => {\n                              const value = Number(e.target.value);\n                              setValue(`items.${index}.quantity`, value);\n                              const q = value;\n                              const r = Number(watch(`items.${index}.rate`)) || 0;\n                              const t = Number(watch(`items.${index}.tax`)) || 0;\n\n                              const base = q * r;\n                              const taxAmount = (t / 100) * base;\n                              const total = base + taxAmount;\n                              setValue(`items.${index}.total`, total);\n                            }}\n                            error={!!errors.items?.[index]?.quantity}\n                            helperText={errors.items?.[index]?.quantity?.message}\n                          />\n                        )}\n                      />\n                    </TableCell>\n\n                    <TableCell>\n                      <Controller\n                        control={control}\n                        name={`items.${index}.rate`}\n                        render={({ field: rateField }) => (\n                          <TextField\n                            type=\"number\"\n                            {...rateField}\n                            onChange={(e) => {\n                              const value = Number(e.target.value);\n                              setValue(`items.${index}.rate`, value);\n                              const q = Number(watch(`items.${index}.quantity`)) || 0;\n                              const r = value;\n                              const t = Number(watch(`items.${index}.tax`)) || 0;\n\n                              const base = q * r;\n                              const taxAmount = (t / 100) * base;\n                              const total = base + taxAmount;\n                              setValue(`items.${index}.total`, total);\n                            }}\n                            error={!!errors.items?.[index]?.rate}\n                            helperText={errors.items?.[index]?.rate?.message}\n                          />\n                        )}\n                      />\n                    </TableCell>\n\n                    <TableCell>\n                      <Controller\n                        control={control}\n                        name={`items.${index}.tax`}\n                        render={({ field: taxRate }) => (\n                          <TextField\n                            type=\"number\"\n                            {...taxRate}\n                            onChange={(e) => {\n                              const value = Number(e.target.value);\n                              setValue(`items.${index}.tax`, value);\n                              const q = Number(watch(`items.${index}.quantity`)) || 0;\n                              const r = Number(watch(`items.${index}.rate`)) || 0;\n                              const t = value;\n\n                              const base = q * r;\n                              const taxAmount = (t / 100) * base;\n                              const total = base + taxAmount;\n                              setValue(`items.${index}.total`, total);\n                            }}\n                            error={!!errors.items?.[index]?.tax}\n                            helperText={errors.items?.[index]?.tax?.message}\n                          />\n                        )}\n                      />\n                    </TableCell>\n\n                    <TableCell>\n                      <TextField\n                        value={(watchedItems[index]?.total || 0).toFixed(2)}\n                        InputProps={{ readOnly: true }}\n                        fullWidth\n                      />\n                    </TableCell>\n\n                    <TableCell align=\"right\">\n                      <IconButton\n                        onClick={() => {\n                          if (watchedItems.length === 1) {\n                            setValue(`items.${index}.item`, '');\n                            setValue(`items.${index}.quantity`, 1);\n                            setValue(`items.${index}.rate`, 0);\n                            setValue(`items.${index}.total`, 0);\n                            setValue(`items.${index}.tax`, 0);\n                          } else {\n                            remove(index);\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={12} display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\">\n          <TextField\n            label=\"Discount\"\n            type=\"number\"\n            {...register('discount')}\n            error={!!errors.discount}\n            helperText={errors.discount?.message}\n            onBlur={() => {\n              if (!discount || discount === 0 || discount === '') {\n                setValue('discount', 0);\n              }\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Box>\n            <Typography>Subtotal: ₹{subtotal.toFixed(2)}</Typography>\n            <Typography>Final Amount: ₹{finalAmount.toFixed(2)}</Typography>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Box textAlign=\"right\" mt={2}>\n            <Button onClick={onClose} sx={{ mr: 1 }}>\n              Cancel\n            </Button>\n            <Button type=\"submit\" variant=\"contained\">\n              Save\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nInvoiceForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  initialData: PropTypes.object,\n  itemsList: PropTypes.array,\n  customers: PropTypes.array,\n};\n","import { useState, useCallback } from 'react';\nimport useSWR, { mutate } from 'swr';\nimport {\n  Button,\n  Container,\n  Typography,\n  Stack,\n  Paper,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\nimport dayjs from 'dayjs';\nimport { Edit, Delete } from '@mui/icons-material';\nimport axiosInstance, { endpoints } from 'src/utils/axios';\nimport MasterDrawer from 'src/components/drawer';\nimport ReusableDeletePopover from 'src/components/delete-popup/delete-popup';\nimport { useSettingsContext } from 'src/components/settings';\nimport InvoiceForm from './InvoiceForm';\n\nconst fetcher = (url) => axiosInstance.get(url).then((res) => res.data);\n\nexport default function InvoiceView() {\n  const settings = useSettingsContext();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [editInvoice, setEditInvoice] = useState(null);\n  console.log('🚀 ~ InvoiceView ~ editInvoice:', editInvoice);\n  const [deletePopoverEl, setDeletePopoverEl] = useState(null);\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState(null);\n\n  const { data: invoices, error, isLoading } = useSWR(endpoints.invoice.list, fetcher);\n  const { data: customers, erro, isLoadig } = useSWR(endpoints.customer.list, fetcher);\n  const { data: itemsList, errr, isLading } = useSWR(endpoints.items.list, fetcher);\n\n  const handleOpenDeletePopover = (event, id) => {\n    setDeletePopoverEl(event.currentTarget);\n    setSelectedInvoiceId(id);\n  };\n\n  const handleCloseDeletePopover = () => {\n    setDeletePopoverEl(null);\n    setSelectedInvoiceId(null);\n  };\n\n  const handleConfirmDelete = () => {\n    handleDelete(selectedInvoiceId);\n    handleCloseDeletePopover();\n  };\n\n  const handleAdd = useCallback(() => {\n    setEditInvoice(null);\n    setOpenDrawer(true);\n  }, []);\n\n  const handleSaveInvoice = useCallback(\n    async (data) => {\n      try {\n        let response;\n\n        if (editInvoice) {\n          response = await axiosInstance.put(`/invoice/update/${editInvoice._id}`, data);\n          const updated = invoices.map((inv) =>\n            inv._id === editInvoice._id ? response.data : inv\n          );\n          mutate(endpoints.invoice.list, updated, false);\n        } else {\n          response = await axiosInstance.post('/invoice/add', data);\n          mutate(endpoints.invoice.list, [...invoices, response.data], false);\n        }\n\n        setOpenDrawer(false);\n      } catch (err) {\n        console.error('Failed to save invoice:', err);\n      }\n    },\n    [invoices, editInvoice]\n  );\n\n  const handleDelete = useCallback(\n    async (id) => {\n      try {\n        await axiosInstance.delete(`/invoice/delete/${id}`);\n        mutate(endpoints.invoice.list);\n      } catch (err) {\n        console.error('Failed to delete invoice:', err);\n      }\n    },\n    [] // No dependencies needed\n  );\n\n  if (error) {\n    return (\n      <Container>\n        <Typography variant=\"h4\">Invoices</Typography>\n        <p style={{ color: 'red', paddingTop: 100 }}>Failed to load invoices.</p>\n      </Container>\n    );\n  }\n\n  // Fetch customers and items\n  // useEffect(() => {\n  //   const fetchCustomers = async () => {\n  //     const data = await fetcher(endpoints.customer.list);\n  //     setCustomers(data);\n  //   };\n  //   const fetchItems = async () => {\n  //     const data = await fetcher(endpoints.items.list);\n  //     setItemsList(data);\n  //   };\n  //   fetchCustomers();\n  //   fetchItems();\n  // }, []);\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Stack direction=\"row\" justifyContent=\"space-between\" mb={3}>\n        <Typography variant=\"h4\">Invoices</Typography>\n        <Button variant=\"contained\" onClick={handleAdd}>\n          Add Invoice\n        </Button>\n      </Stack>\n\n      <Paper>\n        {isLoading ? (\n          <Stack alignItems=\"center\" py={3}>\n            <CircularProgress />\n          </Stack>\n        ) : (\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Customer</TableCell>\n                <TableCell>Sales Person</TableCell>\n                <TableCell>Invoice Date</TableCell>\n                <TableCell>Final Amount</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {invoices?.length > 0 ? (\n                invoices.map((invoice) => (\n                  <TableRow key={invoice._id}>\n                    <TableCell>{invoice.customerId?.name}</TableCell>\n                    <TableCell>{invoice.sales_person}</TableCell>\n                    <TableCell>{new Date(invoice.invoice_date).toLocaleDateString()}</TableCell>\n                    <TableCell>₹{invoice.final_amount.toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        color=\"primary\"\n                        onClick={() => {\n                          const invoiceD = {\n                            _id:invoice._id,\n                            customerId: invoice.customerId._id,\n                            sales_person: invoice.sales_person,\n                            invoice_date: dayjs(invoice.invoice_date),\n                            delivery_date: dayjs(invoice.delivery_date),\n                            description: invoice.description,\n                            items: invoice.items.map((itemObj) => ({\n                              item: itemObj.item._id,\n                              quantity: itemObj.quantity,\n                              rate: itemObj.rate,\n                              tax: itemObj.tax,\n                              total: itemObj.total,\n                            })),\n                            discount: invoice.discount,\n                          };\n                          setEditInvoice(invoiceD);\n                          setOpenDrawer(true);\n                        }}\n                      >\n                        <Edit />\n                      </IconButton>\n                      <IconButton\n                        color=\"error\"\n                        onClick={(e) => handleOpenDeletePopover(e, invoice._id)}\n                      >\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={5} align=\"center\" sx={{ py: 4 }}>\n                    <Typography variant=\"body1\">No invoices available.</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        )}\n      </Paper>\n\n      <MasterDrawer\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        title={editInvoice ? 'Update Invoice' : 'Add Invoice'}\n      >\n        <InvoiceForm\n          initialData={editInvoice || {}}\n          onSubmit={handleSaveInvoice}\n          onClose={() => setOpenDrawer(false)}\n          customers={customers}\n          itemsList={itemsList}\n        />\n      </MasterDrawer>\n\n      <ReusableDeletePopover\n        open={deletePopoverEl}\n        onClose={handleCloseDeletePopover}\n        onConfirm={handleConfirmDelete}\n        title=\"Delete Invoice?\"\n        description=\"Are you sure you want to delete this invoice?\"\n      />\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport ThreeView from 'src/sections/invoice-management/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Three</title>\n      </Helmet>\n\n      <ThreeView />\n    </>\n  );\n}\n"],"names":["ReusableDeletePopover","_ref","open","onClose","onConfirm","_ref$title","title","_ref$description","description","_jsx","CustomPopover","arrow","children","_jsxs","Stack","spacing","sx","p","minWidth","Typography","variant","color","direction","justifyContent","Button","size","onClick","MasterDrawer","console","log","Drawer","anchor","Box","width","xs","sm","includes","display","alignItems","IconButton","CloseIcon","mt","dayjs","utc","InvoiceSchema","Yup","shape","customerId","required","sales_person","invoice_date","delivery_date","nullable","items","of","item","quantity","min","max","rate","tax","total","discount","default","InvoiceForm","_errors$customerId","_errors$sales_person","_errors$discount","onSubmit","initialData","customers","itemsList","_useForm","useForm","resolver","yupResolver","defaultValues","startOf","toISOString","add","control","register","handleSubmit","watch","setValue","errors","formState","_useFieldArray","useFieldArray","name","fields","append","remove","watchedItems","useEffect","forEach","index","base","Number","concat","subtotal","reduce","sum","curr","finalAmount","subscription","value","_ref2","endsWith","parseInt","split","selectedItem","find","itm","_id","selling_price","unsubscribe","component","data","formData","_objectSpread","final_amount","noValidate","Grid","container","md","FormControl","fullWidth","InputLabel","id","Select","labelId","label","error","helperText","message","map","cust","MenuItem","TextField","LocalizationProvider","dateAdapter","AdapterDayjs","Controller","render","_ref3","field","DatePicker","onChange","date","utcDate","slotProps","textField","renderInput","params","_errors$invoice_date","_ref4","_errors$delivery_date","multiline","rows","Paper","overflow","Table","TableHead","TableRow","TableCell","align","AddIcon","TableBody","_watchedItems$index","_ref5","_errors$items","_errors$items$index","controllerField","style","item_name","_ref6","_errors$items2","_errors$items2$index","_errors$items3","_errors$items3$index","_errors$items3$index$","quantityField","type","e","target","_ref7","_errors$items4","_errors$items4$index","_errors$items5","_errors$items5$index","_errors$items5$index$","rateField","_ref8","_errors$items6","_errors$items6$index","_errors$items7","_errors$items7$index","_errors$items7$index$","taxRate","toFixed","InputProps","readOnly","length","DeleteIcon","flexDirection","onBlur","textAlign","mr","fetcher","url","axiosInstance","then","res","InvoiceView","settings","useSettingsContext","_useState","useState","_useState2","_slicedToArray","openDrawer","setOpenDrawer","_useState3","_useState4","editInvoice","setEditInvoice","_useState5","_useState6","deletePopoverEl","setDeletePopoverEl","_useState7","_useState8","selectedInvoiceId","setSelectedInvoiceId","_useSWR","useSWR","endpoints","invoices","isLoading","_useSWR2","_useSWR3","erro","isLoadig","handleCloseDeletePopover","errr","isLading","handleAdd","useCallback","handleSaveInvoice","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","updated","wrap","_context","prev","next","sent","inv","mutate","_toConsumableArray","t0","stop","_x","apply","arguments","handleDelete","_callee2","_context2","_x2","Container","paddingTop","maxWidth","themeStretch","mb","py","CircularProgress","invoice","_invoice$customerId","Date","toLocaleDateString","invoiceD","itemObj","Edit","event","currentTarget","Delete","colSpan","Page","_Fragment","Helmet","ThreeView"],"sourceRoot":""}