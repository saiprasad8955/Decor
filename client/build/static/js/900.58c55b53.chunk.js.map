{"version":3,"file":"static/js/900.58c55b53.chunk.js","mappings":"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","sources":["components/delete-popup/delete-popup.js","components/drawer/drawer.js","sections/customer-master/customerForm.js","sections/customer-master/view.js","pages/dashboard/one.js"],"sourcesContent":["// components/popups/ReusableDeletePopover.js\n\nimport PropTypes from 'prop-types';\nimport { Button, Stack, Typography } from '@mui/material';\nimport CustomPopover from '../custom-popover';\n\nexport default function ReusableDeletePopover({\n  open,\n  onClose,\n  onConfirm,\n  title = 'Delete Item?',\n  description = 'This action cannot be undone.',\n}) {\n  return (\n    <CustomPopover open={open} onClose={onClose} arrow=\"top-right\">\n      <Stack spacing={2} sx={{ p: 2, minWidth: 240 }}>\n        <Typography variant=\"subtitle1\">{title}</Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {description}\n        </Typography>\n        <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\">\n          <Button size=\"small\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"error\" variant=\"contained\" onClick={onConfirm}>\n            Delete\n          </Button>\n        </Stack>\n      </Stack>\n    </CustomPopover>\n  );\n}\n\nReusableDeletePopover.propTypes = {\n  open: PropTypes.object, // anchorEl\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n","import { Drawer, Box, IconButton, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport PropTypes from 'prop-types';\n\nexport default function MasterDrawer({ open, onClose, title, children }) {\n  return (\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\n      <Box sx={{ width: { xs: 300, sm: title.includes('Invoice') ? 1000 : 600 }, p: 3 }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"h6\">{title}</Typography>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <Box mt={3}>{children}</Box>\n      </Box>\n    </Drawer>\n  );\n}\n\nMasterDrawer.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { TextField, Stack, Button, Box } from '@mui/material';\nimport PropTypes from 'prop-types'; // @mui\n\nconst CustomerSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  number: Yup.string()\n    .required('Number is required')\n    .matches(/^\\d{10}$/, 'Number must be digits and exactly 10 digits'),\n  email: Yup.string().email('Invalid email').nullable(),\n  address: Yup.string().nullable(),\n});\n\nexport default function CustomerForm({ initialData = {}, onSubmit, onClose }) {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(CustomerSchema),\n    defaultValues: {\n      name: initialData.name || '',\n      number: initialData.number || '',\n      email: initialData.email || '',\n      address: initialData.address || '',\n    },\n  });\n\n  const submitForm = (data) => {\n    onSubmit(data);\n    reset();\n    onClose();\n  };\n\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit(submitForm)}>\n      <Stack spacing={2}>\n        <TextField\n          label=\"Name\"\n          {...register('name')}\n          error={!!errors.name}\n          helperText={errors.name?.message}\n          fullWidth\n        />\n        <TextField\n          label=\"Mobile Number\"\n          {...register('number')}\n          error={!!errors.number}\n          helperText={errors.number?.message}\n          fullWidth\n        />\n        <TextField\n          label=\"Email\"\n          {...register('email')}\n          error={!!errors.email}\n          helperText={errors.email?.message}\n          fullWidth\n        />\n        <TextField\n          label=\"Address\"\n          {...register('address')}\n          error={!!errors.address}\n          helperText={errors.address?.message}\n          fullWidth\n          multiline\n          rows={2}\n        />\n\n        <Box textAlign=\"right\">\n          <Button variant=\"outlined\" onClick={onClose} sx={{ mr: 1 }}>\n            Cancel\n          </Button>\n\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n            {initialData?.name ? 'Update' : 'Add'}\n          </Button>\n        </Box>\n      </Stack>\n    </Box>\n  );\n}\n\nCustomerForm.propTypes = {\n  initialData: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import { useState, useCallback } from 'react';\nimport useSWR, { mutate } from 'swr';\nimport {\n  Button,\n  Container,\n  Typography,\n  Stack,\n  Paper,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n  CircularProgress,\n  TextField,\n  Backdrop,\n} from '@mui/material';\n\nimport { Edit, Delete } from '@mui/icons-material';\nimport axiosInstance, { endpoints } from 'src/utils/axios';\nimport ReusableDeletePopover from 'src/components/delete-popup/delete-popup';\nimport { useSnackbar } from 'src/components/snackbar';\nimport { useSettingsContext } from 'src/components/settings';\nimport MasterDrawer from 'src/components/drawer';\nimport CustomerForm from './customerForm';\n\nconst fetcher = (url) => axiosInstance.get(url).then((res) => res.data);\n\nexport default function OneView() {\n  const settings = useSettingsContext();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [editCustomer, setEditCustomer] = useState(null);\n  const [deletePopoverEl, setDeletePopoverEl] = useState(null);\n  const [selectedCustomerId, setSelectedCustomerId] = useState(null);\n  const { enqueueSnackbar } = useSnackbar();\n  // Add this state with other useStates at the top\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleOpenDeletePopover = (event, id) => {\n    setDeletePopoverEl(event.currentTarget);\n    setSelectedCustomerId(id);\n  };\n\n  const handleCloseDeletePopover = () => {\n    setDeletePopoverEl(null);\n    setSelectedCustomerId(null);\n  };\n\n  const handleConfirmDelete = () => {\n    handleDelete(selectedCustomerId); // your existing delete logic\n    handleCloseDeletePopover();\n  };\n\n  const { data: customers, error, isLoading } = useSWR(endpoints.customer.list, fetcher);\n\n  const handleAdd = useCallback(() => {\n    setEditCustomer(null);\n    setOpenDrawer(true);\n  }, []);\n\n  const handleSaveCustomer = useCallback(\n    async (data) => {\n      setIsSubmitting(true);\n      try {\n        let response;\n\n        if (editCustomer) {\n          response = await axiosInstance.put(`/customer/update/${editCustomer._id}`, data);\n          mutate(endpoints.customer.list);\n          if (response?.status === 200) {\n            enqueueSnackbar('Customer updated successfully.', { variant: 'success' });\n          }\n        } else {\n          response = await axiosInstance.post('/customer/add', data);\n          mutate(endpoints.customer.list);\n          if (response?.status === 201) {\n            enqueueSnackbar('Customer added successfully.', { variant: 'success' });\n          }\n        }\n\n        setOpenDrawer(false);\n      } catch (err) {\n        console.error('Failed to save customer:', err);\n        enqueueSnackbar(err.message || 'Something went wrong!', { variant: 'error' });\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [editCustomer, enqueueSnackbar]\n  );\n\n  const handleDelete = useCallback(\n    async (id) => {\n      setIsSubmitting(true);\n      try {\n        await axiosInstance.delete(`/customer/delete/${id}`);\n        enqueueSnackbar('Customer deleted successfully.', { variant: 'success' });\n        mutate(endpoints.customer.list);\n      } catch (err) {\n        console.error('Failed to delete customer:', err);\n        enqueueSnackbar(err.message || 'Something went wrong!', { variant: 'error' });\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [enqueueSnackbar]\n  );\n\n  if (error) {\n    return (\n      <div style={{ width: '100%', justifyContent: 'center' }}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" mb={3}>\n          <Typography variant=\"h4\">Customers</Typography>\n          <Button color='primary' variant=\"contained\" onClick={handleAdd}>\n            Add Customer\n          </Button>\n        </Stack>\n\n        <p style={{ color: 'red', fontSize: 20, textAlign: 'center', paddingTop: '150px' }}>\n          Failed to load customers!\n        </p>\n      </div>\n    );\n  }\n\n  const filteredCustomers =\n    customers?.filter((customer) => {\n      const query = searchQuery.toLowerCase();\n      const name = customer.name?.toLowerCase() || '';\n      const email = customer.email?.toLowerCase() || '';\n      const number = customer.number?.toString() || '';\n\n      return name.includes(query) || email.includes(query) || number.includes(query);\n    }) || [];\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Stack direction=\"row\" justifyContent=\"space-between\" mb={3}>\n        <Typography variant=\"h4\">Customers</Typography>\n        <Button variant=\"contained\" color='primary' onClick={handleAdd}>\n          Add Customer\n        </Button>\n      </Stack>\n\n      <div>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          placeholder=\"Search by customer name, email, mobile Number\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          sx={{ mb: 3 }}\n        />\n      </div>\n      <Paper sx={{ width: '100%', overflow: 'auto' }}>\n        {isLoading ? (\n          <div style={{ display: 'flex', justifyContent: 'center', padding: '20px' }}>\n            <CircularProgress />\n          </div>\n        ) : (\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Number</TableCell>\n                <TableCell>Address</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredCustomers && filteredCustomers.length > 0 ? (\n                filteredCustomers.map((customer) => (\n                  <TableRow key={customer._id}>\n                    <TableCell>{customer.name}</TableCell>\n                    <TableCell>{customer.email || 'N/A'}</TableCell>\n                    <TableCell>+91 {customer.number}</TableCell>\n                    <TableCell>{customer.address || 'N/A'}</TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        color=\"primary\"\n                        onClick={() => {\n                          setEditCustomer(customer);\n                          setOpenDrawer(true);\n                        }}\n                      >\n                        <Edit />\n                      </IconButton>\n                      <IconButton\n                        color=\"error\"\n                        onClick={(e) => handleOpenDeletePopover(e, customer._id)}\n                      >\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={5} align=\"center\" sx={{ py: 4 }}>\n                    <Typography variant=\"body1\" color=\"text.secondary\">\n                      No customers found matching <strong>&quot;{searchQuery}&quot;</strong>. Try\n                      searching by name, email, or number.\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        )}\n      </Paper>\n\n      <MasterDrawer\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        title={editCustomer ? 'Update Customer' : 'Add Customer'}\n      >\n        <CustomerForm\n          initialData={editCustomer || {}}\n          onSubmit={handleSaveCustomer}\n          onClose={() => setOpenDrawer(false)}\n        />\n      </MasterDrawer>\n\n      <ReusableDeletePopover\n        open={deletePopoverEl}\n        onClose={handleCloseDeletePopover}\n        onConfirm={handleConfirmDelete}\n        title=\"Delete Customer?\"\n        description=\"Are you sure you want to delete this customer?\"\n      />\n\n      <Backdrop\n        open={isSubmitting}\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport OneView from 'src/sections/customer-master/view';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomerPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Customer</title>\n      </Helmet>\n\n      <OneView />\n    </>\n  );\n}\n"],"names":["ReusableDeletePopover","_ref","open","onClose","onConfirm","_ref$title","title","_ref$description","description","_jsx","CustomPopover","arrow","children","_jsxs","Stack","spacing","sx","p","minWidth","Typography","variant","color","direction","justifyContent","Button","size","onClick","MasterDrawer","Drawer","anchor","Box","width","xs","sm","includes","display","alignItems","IconButton","CloseIcon","mt","CustomerSchema","Yup","shape","name","required","number","matches","email","nullable","address","CustomerForm","_errors$name","_errors$number","_errors$email","_errors$address","_ref$initialData","initialData","onSubmit","_useForm","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","reset","errors","formState","component","data","TextField","_objectSpread","label","error","helperText","message","fullWidth","multiline","rows","textAlign","mr","type","fetcher","url","axiosInstance","then","res","OneView","settings","useSettingsContext","_useState","useState","_useState2","_slicedToArray","openDrawer","setOpenDrawer","_useState3","_useState4","editCustomer","setEditCustomer","_useState5","_useState6","deletePopoverEl","setDeletePopoverEl","_useState7","_useState8","selectedCustomerId","setSelectedCustomerId","enqueueSnackbar","useSnackbar","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","isSubmitting","setIsSubmitting","handleCloseDeletePopover","_useSWR","useSWR","endpoints","customers","isLoading","handleAdd","useCallback","handleSaveCustomer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_response","_response2","wrap","_context","prev","next","concat","_id","sent","mutate","status","t0","console","finish","stop","_x","apply","arguments","handleDelete","_ref2","_callee2","id","_context2","_x2","style","mb","fontSize","paddingTop","filteredCustomers","filter","customer","_customer$name","_customer$email","_customer$number","query","toLowerCase","toString","Container","maxWidth","themeStretch","placeholder","value","onChange","e","target","Paper","overflow","padding","CircularProgress","Table","TableHead","TableRow","TableCell","align","TableBody","length","map","Edit","event","currentTarget","Delete","colSpan","py","Backdrop","zIndex","theme","drawer","CustomerPage","_Fragment","Helmet"],"sourceRoot":""}